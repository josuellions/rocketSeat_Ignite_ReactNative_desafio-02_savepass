{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/screens/RegisterLoginData/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useForm } from 'react-hook-form';\nimport { RFValue } from 'react-native-responsive-fontsize';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport uuid from 'react-native-uuid';\nimport { Header } from \"../../components/Header\";\nimport { Input } from \"../../components/Form/Input\";\nimport { Button } from \"../../components/Form/Button\";\nimport { Container, Form } from \"./styles\";\nvar schema = Yup.object().shape({\n  service_name: Yup.string().required('Nome do serviço é obrigatório!'),\n  email: Yup.string().email('Não é um email válido').required('Email é obrigatório!'),\n  password: Yup.string().required('Senha é obrigatória!')\n});\nexport function RegisterLoginData() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useForm = useForm({\n    resolver: yupResolver(schema)\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  function handleRegister(formData) {\n    var newLoginData, dataKey, response, current, saveData;\n    return _regeneratorRuntime.async(function handleRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newLoginData = _objectSpread({\n              id: String(uuid.v4())\n            }, formData);\n\n            if (!(formData.service_name.length === 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            dataKey = '@savepass:logins';\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(dataKey));\n\n          case 6:\n            response = _context.sent;\n            current = response ? JSON.parse(response) : [];\n            saveData = [].concat(_toConsumableArray(current), [newLoginData]);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(dataKey, JSON.stringify(saveData)));\n\n          case 11:\n            navigate('Home');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    testID: \"service-name-input\",\n    title: \"Nome do servi\\xE7o\",\n    name: \"service_name\",\n    error: 'Has error ? show error message',\n    control: control,\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    testID: \"email-input\",\n    title: \"E-mail\",\n    name: \"email\",\n    error: 'Has error ? show error message',\n    control: control,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    testID: \"password-input\",\n    title: \"Senha\",\n    name: \"password\",\n    error: 'Has error ? show error message',\n    control: control,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    style: {\n      marginTop: RFValue(8)\n    },\n    title: \"Salvar\",\n    onPress: handleSubmit(handleRegister),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/screens/RegisterLoginData/index.tsx"],"names":["React","useNavigation","useForm","RFValue","Yup","yupResolver","AsyncStorage","uuid","Header","Input","Button","Container","Form","schema","object","shape","service_name","string","required","email","password","RegisterLoginData","navigate","resolver","control","handleSubmit","errors","formState","handleRegister","formData","newLoginData","id","String","v4","length","dataKey","getItem","response","current","JSON","parse","saveData","setItem","stringify","flex","Platform","OS","undefined","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Alert, KeyboardAvoidingView, Platform } from 'react-native';\nimport { useForm } from 'react-hook-form';\nimport { RFValue } from 'react-native-responsive-fontsize';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport uuid from 'react-native-uuid';\n\nimport { Header } from '../../components/Header';\nimport { Input } from '../../components/Form/Input';\nimport { Button } from '../../components/Form/Button';\n\nimport {\n  Container,\n  Form\n} from './styles';\n\ninterface FormData {\n  service_name: string;\n  email: string;\n  password: string;\n}\n\nconst schema = Yup.object().shape({\n  service_name: Yup.string().required('Nome do serviço é obrigatório!'),\n  email: Yup.string().email('Não é um email válido').required('Email é obrigatório!'),\n  password: Yup.string().required('Senha é obrigatória!'),\n})\n\nexport function RegisterLoginData() {\n  const { navigate } = useNavigation();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  async function handleRegister(formData: FormData) {\n    const newLoginData = {\n      id: String(uuid.v4()),\n      ...formData\n    }\n    if(formData.service_name.length === 0) {\n      return\n    }\n    const dataKey = '@savepass:logins';\n\n    // Save data on AsyncStorage and navigate to 'Home' screen\n    const response =  await AsyncStorage.getItem(dataKey);\n    const current = response ? JSON.parse(response) : [];\n    const saveData = [\n      ...current,\n      newLoginData\n    ]\n    await AsyncStorage.setItem(dataKey, JSON.stringify(saveData));\n\n    navigate('Home');\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      enabled\n    >\n      <Header />\n      <Container>\n        <Form>\n          <Input\n            testID=\"service-name-input\"\n            title=\"Nome do serviço\"\n            name=\"service_name\"\n            error={\n              // Replace here with real content\n              'Has error ? show error message'\n            }\n            control={control}\n            autoCapitalize=\"sentences\"\n            autoCorrect\n          />\n          <Input\n            testID=\"email-input\"\n            title=\"E-mail\"\n            name=\"email\"\n            error={\n              // Replace here with real content\n              'Has error ? show error message'\n            }\n            control={control}\n            autoCorrect={false}\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n          />\n          <Input\n            testID=\"password-input\"\n            title=\"Senha\"\n            name=\"password\"\n            error={\n              // Replace here with real content\n              'Has error ? show error message'\n            }\n            control={control}\n            secureTextEntry\n          />\n\n          <Button\n            style={{\n              marginTop: RFValue(8)\n            }}\n            title=\"Salvar\"\n            onPress={handleSubmit(handleRegister)}\n          />\n        </Form>\n      </Container>\n    </KeyboardAvoidingView>\n  )\n}"]},"metadata":{},"sourceType":"module"}