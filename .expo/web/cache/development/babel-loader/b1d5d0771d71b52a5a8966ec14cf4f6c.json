{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/screens/Home/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { Header } from \"../../components/Header\";\nimport { SearchBar } from \"../../components/SearchBar\";\nimport { LoginDataItem } from \"../../components/LoginDataItem\";\nimport { Container, Metadata, Title, TotalPassCount, LoginList } from \"./styles\";\nexport function Home() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchListData = _useState4[0],\n      setSearchListData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  function loadData() {\n    var dataKey, response, current;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataKey = '@savepass:logins';\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(dataKey));\n\n          case 3:\n            response = _context.sent;\n            current = response ? JSON.parse(response) : [];\n            setData(current);\n            setSearchListData(current);\n            console.log(current);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleFilterLoginData() {\n    console.log(\">>buscar\");\n    setSearchListData(function (oldState) {\n      return oldState.filter(function (text) {\n        return text.service_name === searchText;\n      });\n    });\n  }\n\n  function handleChangeInputText(text) {\n    setSearchText(text);\n  }\n\n  useFocusEffect(useCallback(function () {\n    loadData();\n  }, []));\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    user: {\n      name: 'Rocketseat',\n      avatar_url: 'https://i.ibb.co/ZmFHZDM/rocketseat.jpg'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Qual senha voc\\xEA procura?\",\n    onChangeText: handleChangeInputText,\n    value: searchText,\n    returnKeyType: \"search\",\n    onSubmitEditing: handleFilterLoginData,\n    onSearchButtonPress: handleFilterLoginData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Suas senhas\"), React.createElement(TotalPassCount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, searchListData.length ? (\"\" + searchListData.length).padStart(2, '0') + \" ao total\" : 'Nada a ser exibido')), React.createElement(LoginList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: searchListData,\n    renderItem: function renderItem(_ref) {\n      var loginData = _ref.item;\n      return React.createElement(LoginDataItem, {\n        service_name: loginData.service_name,\n        email: loginData.email,\n        password: loginData.password,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/screens/Home/index.tsx"],"names":["React","useState","useCallback","AsyncStorage","useFocusEffect","Header","SearchBar","LoginDataItem","Container","Metadata","Title","TotalPassCount","LoginList","Home","searchText","setSearchText","searchListData","setSearchListData","data","setData","loadData","dataKey","getItem","response","current","JSON","parse","console","log","handleFilterLoginData","oldState","filter","text","service_name","handleChangeInputText","name","avatar_url","length","padStart","item","id","loginData","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\n\nimport { Header } from '../../components/Header';\nimport { SearchBar } from '../../components/SearchBar';\nimport { LoginDataItem } from '../../components/LoginDataItem';\n\nimport {\n  Container,\n  Metadata,\n  Title,\n  TotalPassCount,\n  LoginList,\n} from './styles';\n\ninterface LoginDataProps {\n  id: string;\n  service_name: string;\n  email: string;\n  password: string;\n}\n\ntype LoginListDataProps = LoginDataProps[];\n\nexport function Home() {\n  const [searchText, setSearchText] = useState('');\n  const [searchListData, setSearchListData] = useState<LoginListDataProps>([]);\n  const [data, setData] = useState<LoginListDataProps>([]);\n\n  async function loadData() {\n    const dataKey = '@savepass:logins';\n    //await AsyncStorage.removeItem(dataKey);\n    // Get asyncStorage data, use setSearchListData and setData\n    const response =  await AsyncStorage.getItem(dataKey);\n    const current = response ? JSON.parse(response) : [];\n\n    setData(current);\n    setSearchListData(current)\n    console.log(current)\n  }\n\n  function handleFilterLoginData() {\n    // Filter results inside data, save with setSearchListData\n    console.log(\">>buscar\")\n    setSearchListData(oldState => oldState.filter(text => text.service_name === searchText))\n  }\n\n  function handleChangeInputText(text: string) {\n    // Update searchText value\n    \n    setSearchText(text);\n  }\n\n  useFocusEffect(useCallback(() => {\n    loadData();\n  }, []));\n\n  return (\n    <>\n      <Header\n        user={{\n          name: 'Rocketseat',\n          avatar_url: 'https://i.ibb.co/ZmFHZDM/rocketseat.jpg'\n        }}\n      />\n      <Container>\n        <SearchBar\n          placeholder=\"Qual senha vocÃª procura?\"\n          onChangeText={handleChangeInputText}\n          value={searchText}\n          returnKeyType=\"search\"\n          onSubmitEditing={handleFilterLoginData}\n\n          onSearchButtonPress={handleFilterLoginData}\n        />\n\n        <Metadata>\n          <Title>Suas senhas</Title>\n          <TotalPassCount>\n            {searchListData.length\n              ? `${`${searchListData.length}`.padStart(2, '0')} ao total`\n              : 'Nada a ser exibido'\n            }\n          </TotalPassCount>\n        </Metadata>\n\n        <LoginList\n          keyExtractor={(item) => item.id}\n          data={searchListData}\n          renderItem={({ item: loginData }) => {\n            return <LoginDataItem\n              service_name={loginData.service_name}\n              email={loginData.email}\n              password={loginData.password}\n            />\n          }}\n        />\n      </Container>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}