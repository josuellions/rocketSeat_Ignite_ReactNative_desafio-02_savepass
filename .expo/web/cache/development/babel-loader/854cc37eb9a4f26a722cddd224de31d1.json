{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/components/Form/Input/index.tsx\";\nvar _excluded = [\"name\", \"control\", \"title\", \"error\", \"secureTextEntry\"];\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { Container, Label, Error, InputContainer, FormInput, ToggleShowPassButton, Icon } from \"./styles\";\nexport function Input(_ref) {\n  var _this = this;\n\n  var name = _ref.name,\n      control = _ref.control,\n      title = _ref.title,\n      error = _ref.error,\n      secureTextEntry = _ref.secureTextEntry,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordHidden = _useState2[0],\n      setPasswordHidden = _useState2[1];\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, title), error && React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, error), React.createElement(Controller, {\n    name: name,\n    control: control,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          value = _ref2$field.value;\n      return React.createElement(InputContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(FormInput, _extends({}, rest, {\n        onChangeText: onChange,\n        value: value,\n        secureTextEntry: secureTextEntry && passwordHidden,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      })), secureTextEntry && React.createElement(ToggleShowPassButton, {\n        onPress: function onPress() {\n          return setPasswordHidden(!passwordHidden);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: passwordHidden ? \"eye-off\" : \"eye\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/josuel/Documentos/Project_2021/RocketSeat/Ignite/reactnative/02-Semana/01-desafio_01/ignite-template-react-native-savepass/savepass/src/components/Form/Input/index.tsx"],"names":["React","useState","Controller","Container","Label","Error","InputContainer","FormInput","ToggleShowPassButton","Icon","Input","name","control","title","error","secureTextEntry","rest","passwordHidden","setPasswordHidden","field","onChange","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAkBC,UAAlB,QAAoC,iBAApC;AAEA,SACEC,SADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,oBANF,EAOEC,IAPF;AAiBA,OAAO,SAASC,KAAT,OAOG;AAAA;;AAAA,MANRC,IAMQ,QANRA,IAMQ;AAAA,MALRC,OAKQ,QALRA,OAKQ;AAAA,MAJRC,KAIQ,QAJRA,KAIQ;AAAA,MAHRC,KAGQ,QAHRA,KAGQ;AAAA,MAFRC,eAEQ,QAFRA,eAEQ;AAAA,MADLC,IACK;;AACR,kBAA4Cf,QAAQ,CAAC,IAAD,CAApD;AAAA;AAAA,MAAOgB,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,CADF,EAEGC,KAAK,IAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAFZ,EAGE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,MAAM,EAAE;AAAA,8BAAGO,KAAH;AAAA,UAAYC,QAAZ,eAAYA,QAAZ;AAAA,UAAsBC,KAAtB,eAAsBA,KAAtB;AAAA,aACN,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,eACML,IADN;AAEE,QAAA,YAAY,EAAEI,QAFhB;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,eAAe,EAAEN,eAAe,IAAIE,cAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAOGF,eAAe,IACd,oBAAC,oBAAD;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMG,iBAAiB,CAAC,CAACD,cAAF,CAAvB;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,cAAc,GAAG,SAAH,GAAe,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARJ,CADM;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport { TextInputProps } from 'react-native';\nimport { Control, Controller } from 'react-hook-form';\n\nimport {\n  Container,\n  Label,\n  Error,\n  InputContainer,\n  FormInput,\n  ToggleShowPassButton,\n  Icon\n} from './styles';\n\ninterface Props extends TextInputProps {\n  control: Control;\n  name: string;\n  title: string;\n  error: string;\n}\n\nexport function Input({\n  name,\n  control,\n  title,\n  error,\n  secureTextEntry,\n  ...rest\n}: Props) {\n  const [passwordHidden, setPasswordHidden] = useState(true);\n\n  return (\n    <Container>\n      <Label>{title}</Label>\n      {error && <Error>{error}</Error>}\n      <Controller\n        name={name}\n        control={control}\n        render={({ field: { onChange, value } }) => (\n          <InputContainer>\n            <FormInput\n              {...rest}\n              onChangeText={onChange}\n              value={value}\n              secureTextEntry={secureTextEntry && passwordHidden}\n            />\n            {secureTextEntry && (\n              <ToggleShowPassButton onPress={() => setPasswordHidden(!passwordHidden)}>\n                <Icon name={passwordHidden ? \"eye-off\" : \"eye\"} />\n              </ToggleShowPassButton>\n            )}\n          </InputContainer>\n        )}\n      />\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}